#Folgende Statements setzen die Datenbank noch mal neu auf, 
# da wir Änderungen vor Aufgabe 3.1 eingefügt haben. 

DROP DATABASE dbwebanw_sose15_09;
CREATE DATABASE dbwebanw_sose15_09;

CREATE TABLE IF NOT EXISTS `dbwebanw_sose15_09`.`geschaeftsstelle` (
  `geschaeftsstellennummer` INT AUTO_INCREMENT,
  `ort` VARCHAR(65) NULL,
  `plz` VARCHAR (5),
  PRIMARY KEY (`geschaeftsstellennummer`));

CREATE TABLE IF NOT EXISTS `dbwebanw_sose15_09`.`fahrzeug` (
  `fahrzeugnummer` INT AUTO_INCREMENT,
  `hersteller` VARCHAR(45) NULL DEFAULT 'Unbekannt',
  `laufleistung` INT NULL,
  `fahrzeugtyp` VARCHAR(45) NULL,
  `anzahl_sitzplaetze` INT NULL,
  `nummernschild` VARCHAR(15) NULL,
  `fgeschaeftsstellennummer` INT NULL,
  PRIMARY KEY (`fahrzeugnummer`),
  CONSTRAINT `frzgeschaeftsstellennummer`
    FOREIGN KEY (`fgeschaeftsstellennummer`)
    REFERENCES `dbwebanw_sose15_09`.`geschaeftsstelle` (`geschaeftsstellennummer`));

CREATE TABLE IF NOT EXISTS `dbwebanw_sose15_09`.`kunde` (
  `kundennummer` INT AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  `adresse` VARCHAR(150) NULL,
  PRIMARY KEY (`kundennummer`));

CREATE TABLE IF NOT EXISTS `dbwebanw_sose15_09`.`termin` (
  `starttag` DATE,
  `endtag` DATE,
  `terminnummer` INT,
  `tkundennummer` INT,
  PRIMARY KEY (`terminnummer`),
  CONSTRAINT `terkundennummer`
    FOREIGN KEY (`tkundennummer`)
    REFERENCES `dbwebanw_sose15_09`.`kunde` (`kundennummer`));

CREATE TABLE IF NOT EXISTS `dbwebanw_sose15_09`.`mitarbeiter` (
  `mitarbeiternummer` INT AUTO_INCREMENT,
  `Name` VARCHAR(50) NULL,
  `gehalt` FLOAT NULL,
  `adresse` VARCHAR(150) NULL,
  `mitgeschaeftsstellennummer` INT,
  `mitterminnummer` INT,
  `mitfahrzeugnummer` INT,
  PRIMARY KEY (`mitarbeiternummer`),
  CONSTRAINT `mitgeschaeftsstellennummer`
    FOREIGN KEY (`mitgeschaeftsstellennummer`)
    REFERENCES `dbwebanw_sose15_09`.`geschaeftsstelle` (`geschaeftsstellennummer`),
  CONSTRAINT `mitterminnummer`
    FOREIGN KEY (`mitterminnummer`)
    REFERENCES `dbwebanw_sose15_09`.`termin` (`terminnummer`),
  CONSTRAINT `mitfahrzeugnummer`
    FOREIGN KEY (`mitfahrzeugnummer`)
    REFERENCES `dbwebanw_sose15_09`.`fahrzeug` (`fahrzeugnummer`));

CREATE TABLE IF NOT EXISTS `dbwebanw_sose15_09`.`rechnung` (
  `rechnungsnummer` INT AUTO_INCREMENT,
  `anzahl_tage` INT,
  `rechnungsbetrag` INT NULL,
  `rkundennummer` INT,
  PRIMARY KEY (`rechnungsnummer`),
  CONSTRAINT `rechkundennummer`
    FOREIGN KEY (`rkundennummer`)
    REFERENCES `dbwebanw_sose15_09`.`kunde` (`kundennummer`));

CREATE TABLE IF NOT EXISTS `dbwebanw_sose15_09`.`terminmanagement` (
  `mterminnummer` INT,
  `mrechnungsnummer` INT,
  `mfahrzeugnummer` INT,
  PRIMARY KEY (`mterminnummer`),
  CONSTRAINT `terfahrzeugnummer`
    FOREIGN KEY (`mfahrzeugnummer`)
    REFERENCES `dbwebanw_sose15_09`.`fahrzeug` (`fahrzeugnummer`),
  CONSTRAINT `terterminnummer`
    FOREIGN KEY (`mterminnummer`)
    REFERENCES `dbwebanw_sose15_09`.`termin` (`terminnummer`),
  CONSTRAINT `terrechnungsnummer`
    FOREIGN KEY (`mrechnungsnummer`)
     REFERENCES `dbwebanw_sose15_09`.`rechnung` (`rechnungsnummer`));
     
USE dbwebanw_sose15_09;
    
INSERT INTO geschaeftsstelle VALUES(1,'Bremen', 28203);

INSERT INTO fahrzeug VALUES(1,'Audi', 20000,"Coupe",2, 'HB AU 12',1);

INSERT INTO kunde VALUES(1,'Hans Wurst',"Hans Wurst Straße 30 29199 Bremen");

INSERT INTO termin VALUES('2015-05-11','2015-05-30',1,1);

INSERT INTO rechnung VALUES(1,25,500,1);

INSERT INTO mitarbeiter VALUES (1, 'Müller', 1800, 'Flughafenallee 10', 1, 1, 1);

INSERT INTO terminmanagement VALUES(1,1,1);

#Folgende Satements gehören zu Aufgabe 3.1 und 
# bestimmen das Verhalten bei Verletzung referentieller
# Integrität für jeden Fremdschlüssel

USE `dbwebanw_sose15_09`;

ALTER TABLE `fahrzeug`
DROP FOREIGN KEY `frzgeschaeftsstellennummer`;

ALTER TABLE `fahrzeug`
ADD CONSTRAINT `frzgeschaeftsstellennummer` FOREIGN KEY(`fgeschaeftsstellennummer`)
REFERENCES `geschaeftsstelle` (`geschaeftsstellennummer`)
ON DELETE SET NULL
ON UPDATE RESTRICT;

ALTER TABLE `termin`
DROP FOREIGN KEY `terkundennummer`;

ALTER TABLE `termin`
ADD CONSTRAINT `terkundennummer` FOREIGN KEY (`tkundennummer`)
REFERENCES `kunde` (`kundennummer`)
ON DELETE SET NULL
ON UPDATE RESTRICT; 

ALTER TABLE `mitarbeiter`
DROP FOREIGN KEY `mitfahrzeugnummer`,
DROP FOREIGN KEY `mitgeschaeftsstellennummer`,
DROP FOREIGN KEY `mitterminnummer`;

ALTER TABLE `mitarbeiter`
ADD CONSTRAINT `mitfahrzeugnummer` FOREIGN KEY (`mitfahrzeugnummer`)
REFERENCES `fahrzeug` (`fahrzeugnummer`) 
ON DELETE SET NULL
ON UPDATE RESTRICT,
ADD CONSTRAINT `mitgeschaeftsstellennummer` FOREIGN KEY (`mitgeschaeftsstellennummer`)
REFERENCES `geschaeftsstelle` (`geschaeftsstellennummer`) 
ON DELETE SET NULL
ON UPDATE RESTRICT,
ADD CONSTRAINT `mitterminnummer` FOREIGN KEY (`mitterminnummer`)
REFERENCES `termin` (`terminnummer`) 
ON DELETE SET NULL
ON UPDATE RESTRICT;

ALTER TABLE `termin`
DROP FOREIGN KEY `terkundennummer`;

ALTER TABLE `termin`
ADD CONSTRAINT `terkundennummer` FOREIGN KEY (`tkundennummer`)
REFERENCES `kunde` (`kundennummer`) 
ON DELETE SET NULL
ON UPDATE RESTRICT;

ALTER TABLE `terminmanagement`
DROP FOREIGN KEY `terfahrzeugnummer`,
DROP FOREIGN KEY `terrechnungsnummer`,
DROP FOREIGN KEY `terterminnummer`;

ALTER TABLE `terminmanagement`
ADD CONSTRAINT `terfahrzeugnummer` FOREIGN KEY (`mfahrzeugnummer`)
REFERENCES `fahrzeug` (`fahrzeugnummer`)
ON DELETE SET NULL
ON UPDATE RESTRICT,
ADD CONSTRAINT `terterminnummer` FOREIGN KEY (`mterminnummer`)
REFERENCES `termin` (`terminnummer`)
ON DELETE CASCADE
ON UPDATE RESTRICT,
ADD CONSTRAINT `mrechnungsnummer` FOREIGN KEY (`mrechnungsnummer`)
REFERENCES `rechnung` (`rechnungsnummer`)
ON DELETE SET NULL
ON UPDATE RESTRICT;